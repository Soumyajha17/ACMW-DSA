#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int start, end;
} Interval;

int compare(const void *a, const void *b) {
    return ((Interval *)a)->start - ((Interval *)b)->start;
}

void mergeIntervals(Interval intervals[], int n) {
    qsort(intervals, n, sizeof(Interval), compare);

    int index = 0;

    for (int i = 1; i < n; i++) {
        if (intervals[index].end >= intervals[i].start) {
            if (intervals[index].end < intervals[i].end)
                intervals[index].end = intervals[i].end;
        } else {
            index++;
            intervals[index] = intervals[i];
        }
    }

    for (int i = 0; i <= index; i++)
        printf("[%d,%d] ", intervals[i].start, intervals[i].end);
    printf("\n");
}

int main() {
    int n;
    scanf("%d", &n);
    Interval intervals[n];

    for (int i = 0; i < n; i++)
        scanf("%d %d", &intervals[i].start, &intervals[i].end);

    mergeIntervals(intervals, n);

    return 0;
}
